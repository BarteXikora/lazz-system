{"version":3,"file":"static/js/554.19335eb8.chunk.js","mappings":"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","sources":["apps/zgloszenia/functions/AppContext.js","apps/zgloszenia/components/SearchBar.js","apps/zgloszenia/functions/clearFilters.js","apps/zgloszenia/components/TopBar.js","apps/zgloszenia/components/ListHeader.js","apps/zgloszenia/components/ListSortSection.js","apps/zgloszenia/components/ListSortPanel.js","apps/zgloszenia/components/ListSearchInfo.js","apps/zgloszenia/components/ListItem.js","apps/zgloszenia/components/ListEmpty.js","apps/zgloszenia/components/TheList.js","apps/zgloszenia/components/ListError.js","apps/zgloszenia/components/PreviewWrong.js","apps/zgloszenia/functions/sendMail.js","apps/zgloszenia/functions/printContact.js","apps/zgloszenia/components/PreviewHeader.js","apps/zgloszenia/components/PreviewSection.js","apps/zgloszenia/components/ThePreview.js","apps/zgloszenia/functions/filterContacts.js","apps/zgloszenia/functions/sortContacts.js","apps/zgloszenia/functions/appReducer.js","apps/zgloszenia/functions/defaultAppState.js","apps/zgloszenia/components/CheckBoxFilter.js","apps/zgloszenia/components/DateFilter.js","apps/zgloszenia/windows/WindowFilters.js","apps/zgloszenia/windows/WindowMail.js","functions/useClickOutside.js","components/SelectInput.js","apps/zgloszenia/windows/WindowDelegate.js","apps/zgloszenia/windows/NoWindow.js","apps/zgloszenia/functions/windowsSlugs.js","apps/zgloszenia/App.js","apps/zgloszenia/index.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default React.createContext()","import { useState, useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\nimport iconSearch from '../img/icon-search.png'\r\n\r\nconst SearchBar = () => {\r\n    const { appState, appDispatch } = useContext(AppContext)\r\n\r\n    const [search, setSearch] = useState('')\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (search)\r\n            appDispatch({ type: 'UPDATE_FILTERS', payload: { search: search } })\r\n\r\n        setSearch('')\r\n    }\r\n\r\n    return <form className=\"input-group\" onSubmit={handleSubmit}>\r\n        <input\r\n            value={search}\r\n            onChange={e => setSearch(e.target.value)}\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            placeholder=\"Szukaj zgłoszeń...\"\r\n        />\r\n\r\n        <button className=\"btn btn-sec btn-icon-small\" type=\"submit\">\r\n            <img src={iconSearch} alt=\"Szukaj!\" />\r\n        </button>\r\n    </form>\r\n}\r\n\r\nexport default SearchBar","const clearFilters = {\r\n    search: '',\r\n    form: [],\r\n    department: [],\r\n    date: { fromStart: true, toEnd: true, from: '', to: '' }\r\n}\r\n\r\nexport default clearFilters","import { useState, useEffect, useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\n\r\nimport SearchBar from './SearchBar'\r\n\r\nimport clearFilters from '../functions/clearFilters'\r\n\r\nimport iconFilter from '../img/icon-filter.png'\r\nimport iconDelete from '../img/icon-delete.png'\r\nimport iconX from '../../../img/icon-close.png'\r\n\r\nconst TopBar = () => {\r\n    const emptyPills = { search: '', form: false, department: false, date: false }\r\n\r\n    const { appState, appDispatch, openWindow } = useContext(AppContext)\r\n\r\n    const [filterPills, setFilterPills] = useState(emptyPills)\r\n\r\n    useEffect(() => {\r\n        let newPills = { ...emptyPills }\r\n\r\n        if (appState.currentFilters.search.length > 0) {\r\n            if (appState.currentFilters.search.length < 15) newPills.search = appState.currentFilters.search\r\n            else newPills.search = appState.currentFilters.search.substring(0, 15) + '...'\r\n        }\r\n\r\n        if (appState.currentFilters.form.length > 0) newPills.form = true\r\n        if (appState.currentFilters.department.length > 0) newPills.department = true\r\n\r\n        let date = appState.currentFilters.date\r\n        if (!date.fromStart || !date.toEnd) newPills.date = true\r\n\r\n        setFilterPills(newPills)\r\n\r\n    }, [appState.currentFilters])\r\n\r\n    return <section className=\"section-gray py-2 px-3 d-flex justify-content-start align-items-center\">\r\n        <div style={{ width: '250px' }} className=\"me-3\">\r\n            <SearchBar />\r\n        </div>\r\n\r\n        <button\r\n            className='btn btn-prim btn-icon-text-small'\r\n            onClick={() => openWindow('filters', { appState, appDispatch })}\r\n        >\r\n            <img src={iconFilter} alt=\"Filtruj\" />\r\n            <span>Filtruj...</span>\r\n        </button>\r\n\r\n        {\r\n            (filterPills.search || filterPills.form || filterPills.department || filterPills.date)\r\n            && <button\r\n                className=\"btn btn-icon-text-small btn-x ms-2\"\r\n                onClick={() => appDispatch({ type: 'UPDATE_FILTERS', payload: clearFilters })}\r\n            >\r\n                <img src={iconDelete} alt=\"Wyczyść filtry\" />\r\n\r\n                <span>Wyczyść filtry</span>\r\n            </button>\r\n        }\r\n\r\n        <div className=\"separator mx-3\"></div>\r\n\r\n        <div className=\"me-3 fw-bold font-gray-d d-flex align-items-center\">\r\n            {\r\n                filterPills.search || filterPills.form || filterPills.department || filterPills.date ?\r\n\r\n                    <>\r\n                        <span className=\"font-big fw-bold me-4\">Filtry:</span>\r\n\r\n                        {\r\n                            filterPills.search && <div className=\"filter-pill me-3\">\r\n                                <span>Fraza: <i className=\"phrase\">{filterPills.search}</i></span>\r\n\r\n                                <button\r\n                                    className=\"btn btn-x btn-icon-small\"\r\n                                    onClick={() => appDispatch({ type: 'UPDATE_FILTERS', payload: { search: '' } })}\r\n                                >\r\n                                    <img src={iconX} alt=\"Usuń filtr\" />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            filterPills.form && <div className=\"filter-pill me-3\">\r\n                                <span>Formularz...</span>\r\n\r\n                                <button\r\n                                    className=\"btn btn-x btn-icon-small\"\r\n                                    onClick={() => appDispatch({ type: 'UPDATE_FILTERS', payload: { form: [] } })}\r\n                                >\r\n                                    <img src={iconX} alt=\"Usuń filtr\" />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            filterPills.department && <div className=\"filter-pill me-3\">\r\n                                <span>Dział...</span>\r\n\r\n                                <button\r\n                                    className=\"btn btn-x btn-icon-small\"\r\n                                    onClick={() => appDispatch({ type: 'UPDATE_FILTERS', payload: { department: [] } })}\r\n                                >\r\n                                    <img src={iconX} alt=\"Usuń filtr\" />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n\r\n                        {\r\n                            filterPills.date && <div className=\"filter-pill me-3\">\r\n                                <span>Data...</span>\r\n\r\n                                <button\r\n                                    className=\"btn btn-x btn-icon-small\"\r\n                                    onClick={() => appDispatch({\r\n                                        type: 'UPDATE_FILTERS',\r\n                                        payload: { date: clearFilters.date }\r\n                                    })}\r\n                                >\r\n                                    <img src={iconX} alt=\"Usuń filtr\" />\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                    </>\r\n\r\n                    :\r\n\r\n                    'Nie zastosowano żadnych filtrów...'\r\n            }\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default TopBar","import iconDownload from '../img/icon-download.png'\r\nimport iconReload from '../img/icon-reload.png'\r\nimport iconAdd from '../img/icon-add.png'\r\n\r\nconst ListHeader = ({ shownCnt, allCnt }) => {\r\n    return <header className=\"d-flex justify-content-between align-items-center mt-4\">\r\n        <h2 className=\"fw-bold font-subtitle m-0\">\r\n            <span>Zgłoszenia:</span>\r\n            <span className=\"font-gray ms-2\">({shownCnt === allCnt ? allCnt : `${shownCnt} z ${allCnt}`})</span>\r\n        </h2>\r\n\r\n        <div className='d-flex'>\r\n            <button className=\"btn btn-sec btn-icon-text-small ms-2\">\r\n                <img src={iconDownload} alt=\"Pobierz...\" />\r\n                <span>Pobierz listę...</span>\r\n            </button>\r\n\r\n            <button className=\"btn btn-sec btn-icon-text-small ms-2\">\r\n                <img src={iconReload} alt=\"Odśwież\" />\r\n                <span>Odśwież</span>\r\n            </button>\r\n\r\n            <button className=\"btn btn-prim btn-icon-text-small ms-4\">\r\n                <img src={iconAdd} alt=\"Dodaj\" />\r\n                <span>Dodaj zgłoszenie</span>\r\n            </button>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default ListHeader","const ListSortSection = ({ cols, text, isActive, isDesc, isEven, action }) => {\r\n    return <div\r\n        className={`col-${cols} p-0 section-gray${isEven ? '-d' : ''} d-flex align-items-center justify-content-between fw-bold`}\r\n    >\r\n        <span className=\"ps-3\">{text}</span>\r\n\r\n        <button\r\n            className={`btn btn-sort ${isActive && 'btn-sort-active'} ${isDesc && 'btn-sort-desc'}`}\r\n            onClick={action}\r\n        >\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default ListSortSection","import { useState, useEffect, useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\n\r\nimport ListSortSection from './ListSortSection'\r\n\r\nconst ListSortPanel = () => {\r\n    const { appState, appDispatch } = useContext(AppContext)\r\n    const [currentSort, setCurrentSort] = useState(appState.sort)\r\n    useEffect(() => setCurrentSort(appState.sort), [appState.sort])\r\n\r\n    const handleSortClick = (sort) => {\r\n        let newSort = { by: sort, method: 'asc' }\r\n        if (sort === currentSort.by) newSort.method = currentSort.method === 'desc' ? 'asc' : 'desc'\r\n\r\n        appDispatch({ type: 'SORT_CONTACTS', payload: newSort })\r\n    }\r\n\r\n    return <section className=\"container-fluid sticky-top mt-4 px-3\">\r\n        <div className=\"row\">\r\n            <ListSortSection\r\n                cols='2'\r\n                text='Data:'\r\n                isActive={currentSort.by === 'date'}\r\n                isDesc={currentSort.by === 'date' && currentSort.method === 'desc'}\r\n                isEven={true}\r\n                action={() => handleSortClick('date')}\r\n            />\r\n\r\n            <ListSortSection\r\n                cols='4'\r\n                text='Klient:'\r\n                isActive={currentSort.by === 'client'}\r\n                isDesc={currentSort.by === 'client' && currentSort.method === 'desc'}\r\n                isEven={false}\r\n                action={() => handleSortClick('client')}\r\n            />\r\n\r\n            <ListSortSection\r\n                cols='2'\r\n                text='Dział:'\r\n                isActive={currentSort.by === 'department'}\r\n                isDesc={currentSort.by === 'department' && currentSort.method === 'desc'}\r\n                isEven={true}\r\n                action={() => handleSortClick('department')}\r\n            />\r\n\r\n            <ListSortSection\r\n                cols='3'\r\n                text='Przekazano:'\r\n                isActive={currentSort.by === 'worker'}\r\n                isDesc={currentSort.by === 'worker' && currentSort.method === 'desc'}\r\n                isEven={false}\r\n                action={() => handleSortClick('worker')}\r\n            />\r\n\r\n            <ListSortSection\r\n                cols='1'\r\n                text='★'\r\n                isActive={currentSort.by === 'star'}\r\n                isDesc={currentSort.by === 'star' && currentSort.method === 'desc'}\r\n                isEven={true}\r\n                action={() => handleSortClick('star')}\r\n            />\r\n        </div>\r\n    </section>\r\n}\r\n\r\nexport default ListSortPanel","import iconX from '../../../img/icon-close.png'\r\n\r\nconst ListSearchInfo = ({ phrase, action }) => {\r\n    return <div className=\"info-box my-4 d-flex align-items-center justify-content-between\">\r\n        <h2 className=\"fw-bold font-big mb-0\">\r\n            Wyniki wyszukiwania dla <q><i className=\"font-black\">{phrase}</i></q>:\r\n        </h2>\r\n\r\n        <button className=\"btn btn-x btn-icon-small\" onClick={action}>\r\n            <img src={iconX} alt=\"Anuluj wyszukiwanie\" />\r\n        </button>\r\n    </div>\r\n}\r\n\r\nexport default ListSearchInfo","import { useRef } from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ListItem = ({ contact, isActive, select, setStar }) => {\r\n    const starRef = useRef()\r\n\r\n    const handleItemClick = (event, id) => {\r\n        if (event.target !== starRef.current && event.target !== starRef.current.children[0])\r\n            select(id)\r\n    }\r\n\r\n    return <div\r\n        className={`row mb-2 py-2 list-item ${isActive && 'list-item-active'}`}\r\n        onClick={(event) => handleItemClick(event, contact.id)}\r\n    >\r\n        <div className=\"item-column col-2 py-1 ps-4 d-flex align-items-center\">\r\n            <div>\r\n                {\r\n                    moment(contact.date).isValid() ? <>\r\n                        <b>{moment(contact.date).format('DD.MM.YYYY')}</b> <br />\r\n                        {moment(contact.date).format('HH:mm')}\r\n                    </>\r\n\r\n                        :\r\n\r\n                        <span className=\"font-gray fw-bold\">[ brak danych ]</span>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"item-column col-4 py-1 ps-3 d-flex align-items-center\">\r\n            <div>\r\n                <b>\r\n                    {\r\n                        contact.company || contact.name || <span className=\"font-gray\">[ brak danych ]</span>\r\n                    }\r\n                </b>\r\n\r\n                <br />\r\n\r\n                {contact.email}\r\n                {(contact.email && contact.tel) && ', '}\r\n                {contact.tel}\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"item-column col-2 py-1 ps-3 d-flex align-items-center\">\r\n            <b>\r\n                {\r\n                    contact.department &&\r\n                    contact.department.name ||\r\n                    <span className=\"font-gray\">[ brak danych ]</span>\r\n                }\r\n            </b>\r\n        </div>\r\n\r\n        <div className=\"item-column col-3 py-1 ps-3 d-flex align-items-center\">\r\n            <b>\r\n                {\r\n                    contact.worker &&\r\n                    contact.worker.name ||\r\n                    <span className=\"font-gray\">[ nie przekazano ]</span>\r\n                }\r\n            </b>\r\n        </div>\r\n\r\n        <div className=\"item-column col-1 py-1 d-flex align-items-center justify-content-center\">\r\n            <button\r\n                className={`btn btn-star ${contact.star && 'btn-star-active'}`}\r\n                ref={starRef}\r\n                onClick={() => setStar(contact.id, !contact.star)}\r\n            >\r\n                <span>★</span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ListItem","import { useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\n\r\nimport picEmpty from '../../../img/pic-empty.png'\r\nimport iconReload from '../img/icon-reload.png'\r\nimport iconDelete from '../img/icon-delete.png'\r\n\r\nimport clearFilters from '../functions/clearFilters'\r\n\r\nconst ListEmpty = () => {\r\n    const { appDispatch, fetchList } = useContext(AppContext)\r\n\r\n    return <div className=\"mt-5 pt-4 text-center\">\r\n        <img src={picEmpty} alt=\"Wystąpił błąd!\" />\r\n\r\n        <h2 className=\"fw-bold font-title font-gray-d mb-3\">Lista zgłoszeń jest pusta!</h2>\r\n\r\n        <p>\r\n            Jeżeli lista powinna zawierać pozycje, skontaktuj<br />\r\n            się z administratorem systemu!\r\n        </p>\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n            <button\r\n                className=\"mt-4 mb-2 me-2 btn btn-x btn-icon-text\"\r\n                onClick={() => appDispatch({ type: 'UPDATE_FILTERS', payload: clearFilters })}\r\n            >\r\n                <img src={iconDelete} alt=\"Odśwież\" />\r\n                <span>Wyczyść filtry</span>\r\n            </button>\r\n\r\n            <button className=\"mt-4 mb-2 btn btn-prim btn-icon-text\" onClick={fetchList}>\r\n                <img src={iconReload} alt=\"Odśwież\" />\r\n                <span>Odśwież</span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ListEmpty","import { useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\n\r\nimport ListSortPanel from './ListSortPanel'\r\nimport ListSearchInfo from './ListSearchInfo'\r\nimport ListItem from './ListItem'\r\nimport ListEmpty from './ListEmpty'\r\n\r\nconst TheList = () => {\r\n    const { appState, appDispatch, waitSetStars } = useContext(AppContext)\r\n\r\n    return <>\r\n        {\r\n            appState.currentFilters.search !== '' && <ListSearchInfo\r\n                phrase={appState.currentFilters.search}\r\n                action={() => appDispatch({ type: 'UPDATE_FILTERS', payload: { search: '' } })}\r\n            />\r\n        }\r\n\r\n        {\r\n            appState.filteredSortedList.length === 0 ? <ListEmpty /> : <>\r\n\r\n                <ListSortPanel />\r\n\r\n                <main className=\"container-fluid mt-3 mb-5 px-3\">\r\n                    {\r\n                        appState.filteredSortedList.map(contact => <ListItem\r\n                            key={contact.id}\r\n                            contact={contact}\r\n                            isActive={contact.id === appState.selectedContact}\r\n                            select={(id) => appDispatch({ type: 'SELECT_CONTACT', payload: id })}\r\n                            setStar={waitSetStars}\r\n                        />)\r\n                    }\r\n                </main>\r\n            </>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default TheList","import picError from '../../../img/pic-error.png'\r\nimport iconReload from '../img/icon-reload.png'\r\n\r\nconst ListError = ({ message, code, reload }) => {\r\n    return <div className=\"mt-5 pt-4 text-center\">\r\n        <img src={picError} alt=\"Wystąpił błąd!\" />\r\n\r\n        <h2 className=\"fw-bold font-title font-wrong\">Nie udało się załadować listy!</h2>\r\n\r\n        <p>\r\n            {message}\r\n        </p>\r\n\r\n        {\r\n            code && <span className=\"font-gray\">Kod błędu: <b>{code}</b></span>\r\n        }\r\n\r\n        <div className=\"d-flex justify-content-center\">\r\n            <button className=\"mt-4 btn btn-prim btn-icon-text\" onClick={reload}>\r\n                <img src={iconReload} alt=\"Odśwież\" />\r\n                <span>Odśwież</span>\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ListError","const PreviewWrong = () => {\r\n    return <div className=\"mt-5 pt-5 text-center\">\r\n        <h2 className=\"fw-bold font-title font-gray\">¯\\_(ツ)_/¯</h2>\r\n    </div>\r\n}\r\n\r\nexport default PreviewWrong","import moment from 'moment'\r\n\r\nconst translateKey = (key) => {\r\n    const dictionary = {\r\n        date: 'Czas przyjęcia zgłoszenia',\r\n        name: 'Imię i Nazwisko, Nazwa',\r\n        company: 'Nazwa firmy',\r\n        nip: 'NIP / VAT EU',\r\n        email: 'Adres e-mail',\r\n        tel: 'Numer telefonu',\r\n        topic: 'Temat',\r\n        message: 'Treść wiadomości',\r\n        type: 'Typ zgłoszenia',\r\n        country: 'Kraj zgłoszenia',\r\n        address: 'Adres',\r\n        brand: 'Marka i model',\r\n        si: 'Numer seryjny',\r\n        cycles: 'Liczba wykonanych cykli',\r\n        form: 'Formularz',\r\n        department: 'Dział',\r\n    }\r\n\r\n    return dictionary[key] || '[niestandardowa dana]'\r\n}\r\n\r\nconst sendMail = (contact, to = '') => {\r\n    let title = 'Przypomnienie - zgłoszenie z formularza na stronie Lazzoni Group'\r\n\r\n    let filledData = {}, notFilledData = []\r\n\r\n    for (const [key, value] of Object.entries(contact)) {\r\n        if (typeof value === 'string') {\r\n            if (value !== '') filledData = { ...filledData, [key]: value }\r\n\r\n        } else if (value !== null) {\r\n            if (key === 'form' || key === 'department') filledData = { ...filledData, [key]: value }\r\n        }\r\n    }\r\n\r\n    for (const [key, value] of Object.entries(contact)) {\r\n        if ((key !== 'worker' && key !== 'author') && (value === '' || value === null))\r\n            notFilledData.push(key)\r\n    }\r\n\r\n    let body = 'Podane informacje:\\n\\n'\r\n\r\n    if (Object.entries(filledData).length === 0) body += '[brak uzupełnionych danych]\\n'\r\n    else {\r\n        for (const [key, value] of Object.entries(filledData)) {\r\n            if (typeof value === 'string') {\r\n                if (value !== '') {\r\n                    if (key === 'date')\r\n                        body += translateKey(key) + ': ' + moment(value).format('DD.MM.YYYY, HH:mm') + ',\\n'\r\n\r\n                    else body += translateKey(key) + ': ' + value + ',\\n'\r\n                }\r\n\r\n            } else if (value !== null) {\r\n                let valueToShow = ''\r\n                if (key === 'form' || key === 'department') valueToShow = value.name\r\n\r\n                if (valueToShow !== '') body += translateKey(key) + ': ' + valueToShow + ',\\n'\r\n            }\r\n        }\r\n\r\n        body = body.slice(0, -2) + '.\\n'\r\n    }\r\n\r\n    if (notFilledData.length !== 0) {\r\n        body += '\\nNieuzupełnione dane:\\n\\n'\r\n\r\n        for (const field of notFilledData) {\r\n            body += translateKey(field) + ', '\r\n        }\r\n\r\n        body = body.slice(0, -2) + '.'\r\n    }\r\n\r\n    document.location = 'mailto:' + to + '?subject=' + title + '&body=' + encodeURIComponent(body)\r\n}\r\n\r\nexport default sendMail","const printContact = (content) => {\r\n    let newWindow = window.open('', '')\r\n    newWindow.document.open()\r\n    newWindow.document.write(\r\n        '<html><head>' +\r\n        '<link rel=\"stylesheet\" href=\"css/main.css\">' +\r\n        '<title>Drukuj zgłoszenie</title>' +\r\n        '</head><body onload=\"window.print()\">' +\r\n        '<div class=\"col-12\"><h1>Zgłoszenie z formularza na stronie Lazzoni Group:</h1></div>' +\r\n        content.outerHTML || new XMLSerializer().serializeToString(content) +\r\n        '</body></html>'\r\n    )\r\n    newWindow.document.close()\r\n    setTimeout(() => { newWindow.close() }, 200)\r\n}\r\n\r\nexport default printContact","import { useContext } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\n\r\nimport sendMail from '../functions/sendMail'\r\nimport printContact from '../functions/printContact'\r\n\r\nimport iconDelegate from '../img/icon-delegate.png'\r\nimport iconSend from '../img/icon-send.png'\r\nimport iconPrint from '../img/icon-print.png'\r\n\r\nconst PreviewHeader = ({ contact, empty, contentToPrint }) => {\r\n    const { appState, openWindow } = useContext(AppContext)\r\n\r\n    return <header className=\"mb-4 p-4 section-gray-d\">\r\n        <h2 className=\"font-big fw-bold\">\r\n            <span className=\"font-gray me-2\">Zgłoszenie od:</span>\r\n            {' '}\r\n\r\n            {contact.company}\r\n            {contact.name && contact.company && ', '}\r\n            {contact.name}\r\n\r\n            {!contact.name && !contact.company && <span className=\"font-gray me-2\">[ brak danych ]</span>}\r\n        </h2>\r\n\r\n        <div className='mt-4'>\r\n            <button\r\n                className=\"btn btn-prim btn-icon-text-small me-2 mb-2 d-inline-block\"\r\n                onClick={() => openWindow('delegate', { contact, workers: appState.workersList })}\r\n            >\r\n                <img src={iconDelegate} alt=\"Przekaż\" />\r\n                <span>Przekaż zgłoszenie...</span>\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-prim btn-icon-text-small me-2 mb-2 d-inline-block\"\r\n                onClick={() => openWindow('email', { contact, sendMail })}\r\n            >\r\n                <img src={iconSend} alt=\"Wyślij\" />\r\n                <span>Wyślij e-mail...</span>\r\n            </button>\r\n\r\n            <button\r\n                className=\"btn btn-prim btn-icon-text-small me-2 mb-2 d-inline-block\"\r\n                onClick={() => printContact(contentToPrint)}\r\n            >\r\n                <img src={iconPrint} alt=\"Drukuj\" />\r\n                <span>Drukuj zgłoszenie</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div className=\"checkbox-container mt-3 ms-1\">\r\n            <label>\r\n                Ukryj nieuzupełnione pola\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={empty.hideEmptyFields}\r\n                    onChange={() => empty.setHideEmptyFields(!empty.hideEmptyFields)}\r\n                />\r\n\r\n                <div className=\"checkmark\"></div>\r\n            </label>\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default PreviewHeader","import { useState, useEffect } from 'react'\r\n\r\nconst PreviewSection = ({ title, fields, hideEmptyFields }) => {\r\n    const [anyField, setAnyField] = useState(1)\r\n\r\n    useEffect(() => {\r\n        const any = fields.filter(field => field.value)\r\n        setAnyField(any.length)\r\n\r\n    }, [fields])\r\n\r\n    return <> {(anyField > 0 || !hideEmptyFields) && <section className=\"px-4 mb-5\">\r\n        <h2 className=\"section-title mb-4\">{title}:</h2>\r\n\r\n        <div className=\"row\">\r\n            {\r\n                fields.map((field, n) => (field.value || !hideEmptyFields)\r\n                    && <div key={n} className={`${field.fullWidth ? 'col-12' : 'col-6'} mb-4`}>\r\n\r\n                        <b>{field.label}:</b> <br />\r\n\r\n                        {field.value || <span className=\"fw-bold font-gray\">[ brak wartości ]</span>}\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    </section>\r\n    }\r\n    </>\r\n}\r\n\r\nexport default PreviewSection","import { useState, useEffect, useContext, useRef } from 'react'\r\nimport AppContext from '../functions/AppContext'\r\nimport moment from 'moment'\r\n\r\nimport PreviewHeader from './PreviewHeader'\r\nimport PreviewSection from './PreviewSection'\r\n\r\nconst ThePreview = () => {\r\n    const { appState } = useContext(AppContext)\r\n\r\n    const [shownContact, setShownContact] = useState({})\r\n    const [hideEmptyFields, setHideEmptyFields] = useState(true)\r\n\r\n    const contentRef = useRef()\r\n\r\n    useEffect(() => {\r\n        const found = appState.contactsList.filter(contact => contact.id === appState.selectedContact)\r\n        const selected = found && found.length > 0 && found[0] || {}\r\n\r\n        setShownContact(selected)\r\n\r\n    }, [appState.selectedContact])\r\n\r\n    return <>\r\n        <PreviewHeader\r\n            contentToPrint={contentRef.current}\r\n            contact={shownContact}\r\n            empty={{ hideEmptyFields, setHideEmptyFields }}\r\n        />\r\n\r\n        <div ref={contentRef}>\r\n            <PreviewSection\r\n                title='Szczegóły zgłoszenia'\r\n                fields={[\r\n                    { label: 'Formularz', value: shownContact.form ? shownContact.form.name : null },\r\n                    {\r\n                        label: 'Dział',\r\n                        value: shownContact.department ?\r\n                            <>\r\n                                {shownContact.department.name} {' '}\r\n\r\n                                (<a href={`mailto:${shownContact.department.email}`} target='_blank'>\r\n                                    {shownContact.department.email}\r\n                                </a>)\r\n                            </>\r\n                            : null\r\n                    },\r\n                    {\r\n                        label: 'Czas otrzymania zgłoszenia',\r\n                        value: moment(shownContact.date).isValid() ?\r\n                            moment(shownContact.date).format('DD.MM.YYYY, HH:mm')\r\n                            :\r\n                            <span className=\"font-gray fw-bold\">[ brak danych ]</span>\r\n                    },\r\n                    {\r\n                        label: 'Przekazano',\r\n                        value: shownContact.worker ?\r\n                            <>\r\n                                {shownContact.worker.name} {' '}\r\n\r\n                                (<a href={`mailto:${shownContact.worker.email}`} target='_blank'>\r\n                                    {shownContact.worker.email}\r\n                                </a>)\r\n                            </>\r\n                            : null\r\n                    },\r\n                    { label: 'Autor zgłoszenia', value: shownContact.author ? shownContact.author.name : null },\r\n                    { label: 'Typ zgłoszenia', value: shownContact.type }\r\n                ]}\r\n                hideEmptyFields={hideEmptyFields}\r\n            />\r\n\r\n            <PreviewSection\r\n                title='Dane kontaktowe'\r\n                fields={[\r\n                    { label: 'Imię i nazwisko, nazwa', value: shownContact.name },\r\n                    { label: 'Nazwa firmy', value: shownContact.company },\r\n                    {\r\n                        label: 'Adres e-mail',\r\n                        value: shownContact.email ?\r\n                            <a href={`mailto:${shownContact.email}`} target='_blank'>{shownContact.email}</a>\r\n                            : null\r\n                    }, {\r\n                        label: 'Numer telefonu',\r\n                        value: shownContact.tel ?\r\n                            <a href={`tel:${shownContact.tel}`} target='_blank'>{shownContact.tel}</a>\r\n                            : null\r\n                    },\r\n                    { label: 'Adres', value: shownContact.address },\r\n                    { label: 'NIP, lub VAT EU', value: shownContact.nip }\r\n                ]}\r\n                hideEmptyFields={hideEmptyFields}\r\n            />\r\n\r\n            <PreviewSection\r\n                title='Wiadomość'\r\n                fields={[\r\n                    { label: 'Temat', value: shownContact.topic, fullWidth: true },\r\n                    { label: 'Treść wiadomości', value: shownContact.message, fullWidth: true }\r\n                ]}\r\n                hideEmptyFields={hideEmptyFields}\r\n            />\r\n\r\n            <PreviewSection\r\n                title='Informacje dodatkowe'\r\n                fields={[\r\n                    { label: 'Kraj zgłoszenia', value: shownContact.country },\r\n                    { label: 'Marka i model', value: shownContact.brand },\r\n                    { label: 'Numer seryjny', value: shownContact.si },\r\n                    { label: 'Liczba wykonanych cykli', value: shownContact.cycles },\r\n                ]}\r\n                hideEmptyFields={hideEmptyFields}\r\n            />\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default ThePreview","import moment from 'moment'\r\n\r\nconst doSearch = (list, search) => {\r\n    let newArray = []\r\n\r\n    list.forEach((contact) => {\r\n        for (const [key, value] of Object.entries(contact)) {\r\n            if (typeof value === 'string') {\r\n                if (value.toLowerCase().indexOf(search.toLowerCase()) >= 0) {\r\n                    newArray.push(contact)\r\n                    return\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    return newArray\r\n}\r\n\r\nconst filterByArray = (list, field, filters) => {\r\n    let newArray = []\r\n\r\n    list.forEach((contact) => {\r\n        let any = true\r\n\r\n        if (contact[field] === null) return\r\n\r\n        filters.forEach((filter) => {\r\n            if (contact[field].id === filter.id) any = false\r\n        })\r\n\r\n        if (any) newArray.push(contact)\r\n    })\r\n\r\n    return newArray\r\n}\r\n\r\nconst filterByDate = (list, filters) => {\r\n    if (!filters.fromStart) {\r\n        let filtered = []\r\n        let fromDate = filters.from\r\n\r\n        list.forEach((contact) => {\r\n            if (moment(contact.date).isSameOrAfter(fromDate, 'day')) filtered.push(contact)\r\n        })\r\n\r\n        list = [...filtered]\r\n    }\r\n\r\n    if (!filters.toEnd) {\r\n        let filtered = []\r\n        let toDate = filters.to\r\n\r\n        list.forEach((contact) => {\r\n            if (moment(contact.date).isSameOrBefore(toDate, 'day')) filtered.push(contact)\r\n        })\r\n\r\n        list = [...filtered]\r\n    }\r\n\r\n    return list\r\n}\r\n\r\nconst filterContacts = (list, filters) => {\r\n    let currentList = [...list]\r\n\r\n    if (filters.search !== '') currentList = doSearch(currentList, filters.search)\r\n    if (filters.form.length > 0) currentList = filterByArray(currentList, 'form', filters.form)\r\n    if (filters.department.length > 0) currentList = filterByArray(currentList, 'department', filters.department)\r\n    currentList = filterByDate(currentList, filters.date)\r\n\r\n    return [...currentList]\r\n}\r\n\r\nexport default filterContacts","const sortByDate = (a, b) => {\r\n    const aDate = new Date(a.date).getTime()\r\n    const bDate = new Date(b.date).getTime()\r\n\r\n    return (aDate - bDate) * -1\r\n}\r\n\r\nconst sortByClient = (a, b) => {\r\n    let aName = a.company ? a.company : a.name ? a.name : 'zzzzzzz'\r\n    let bName = b.company ? b.company : b.name ? b.name : 'zzzzzzz'\r\n\r\n    aName.toLowerCase()\r\n    bName.toLowerCase()\r\n\r\n    return aName.localeCompare(bName)\r\n}\r\n\r\nconst sortByDepartment = (a, b) => {\r\n    let aDepartment = a.department !== null ? a.department.name || 'zzzzzzzzzz' : 'zzzzzzzzzz'\r\n    let bDepartment = b.department !== null ? b.department.name || 'zzzzzzzzzz' : 'zzzzzzzzzz'\r\n\r\n    aDepartment.toLowerCase()\r\n    bDepartment.toLowerCase()\r\n\r\n    return aDepartment.localeCompare(bDepartment)\r\n}\r\n\r\nconst sortByWorker = (a, b) => {\r\n    let aWorker = a.worker !== null ? a.worker.name || 'zzzzzzzzzz' : 'zzzzzzzzzz'\r\n    let bWorker = b.worker !== null ? b.worker.name || 'zzzzzzzzzz' : 'zzzzzzzzzz'\r\n\r\n    aWorker.toLowerCase()\r\n    bWorker.toLowerCase()\r\n\r\n    return aWorker.localeCompare(bWorker)\r\n}\r\n\r\nconst sortByStar = (array) => {\r\n    let newArray = []\r\n\r\n    for (const a of array) if (a.star) newArray.push(a)\r\n    for (const a of array) if (!a.star) newArray.push(a)\r\n\r\n    return newArray\r\n}\r\n\r\nconst sortContacts = (list, sort) => {\r\n    if (sort.by === 'date') list = list.sort(sortByDate)\r\n    else if (sort.by === 'client') list = list.sort(sortByClient)\r\n    else if (sort.by === 'department') list = list.sort(sortByDepartment)\r\n    else if (sort.by === 'worker') list = list.sort(sortByWorker)\r\n    else if (sort.by === 'star') list = sortByStar(list)\r\n\r\n    if (sort.method === 'desc') list = list.reverse()\r\n\r\n    return [...list]\r\n}\r\n\r\nexport default sortContacts","import filterContacts from './filterContacts'\r\nimport sortContacts from './sortContacts'\r\n\r\nconst appReducer = (state, action) => {\r\n    if (action.type === 'LOAD_FORMS') {\r\n        return { ...state, formsList: action.payload }\r\n    }\r\n\r\n    if (action.type === 'LOAD_DEPARTMENTS') {\r\n        return { ...state, departmentsList: action.payload }\r\n    }\r\n\r\n    if (action.type === 'LOAD_WORKERS') {\r\n        return { ...state, workersList: action.payload }\r\n    }\r\n\r\n    if (action.type === 'LOAD_STARS') {\r\n        return { ...state, starsList: action.payload }\r\n    }\r\n\r\n    if (action.type === 'LOAD_CONTACTS') {\r\n        let selected = null\r\n        if (action.payload) if (action.payload.length > 0) selected = action.payload[0].id\r\n\r\n        if (action.payload) for (const contact of action.payload) {\r\n            // Fill form data:\r\n            let foundForm = state.formsList.filter(form => form.id === contact.form)\r\n            if (foundForm.length > 0) {\r\n                foundForm = foundForm[0]\r\n                contact.form = foundForm\r\n\r\n            } else contact.form = null\r\n\r\n            // Fill department data:\r\n            let foundDepartment = state.departmentsList.filter(dep => dep.id === contact.department)\r\n            if (foundDepartment.length > 0) {\r\n                foundDepartment = foundDepartment[0]\r\n                contact.department = foundDepartment\r\n\r\n            } else contact.department = null\r\n\r\n            // Fill worker data:\r\n            let foundWorker = state.workersList.filter(worker => worker.id === contact.worker)\r\n            if (foundWorker.length > 0) {\r\n                foundWorker = foundWorker[0]\r\n                contact.worker = foundWorker\r\n\r\n            } else contact.worker = null\r\n\r\n            // Fill stars data:\r\n            let foundStar = state.starsList.filter(star => star.contact_id === contact.id)\r\n            if (foundStar.length > 0) contact.star = true\r\n            else contact.star = false\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            listReady: true,\r\n            contactsList: action.payload,\r\n            selectedContact: selected,\r\n            error: { isError: false, message: '', code: '' }\r\n        }\r\n    }\r\n\r\n    if (action.type === 'LIST_ERROR') {\r\n        return {\r\n            ...state,\r\n            error: { isError: true, message: action.payload.message, code: action.payload.error },\r\n            listReady: true\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SELECT_CONTACT') {\r\n        return { ...state, selectedContact: action.payload }\r\n    }\r\n\r\n    if (action.type === 'UPDATE_FILTERS') {\r\n        return { ...state, currentFilters: { ...state.currentFilters, ...action.payload } }\r\n    }\r\n\r\n    if (action.type === 'FILTER_SORT_CONTACTS') {\r\n        const filteredList = filterContacts(state.contactsList, state.currentFilters)\r\n        const filteredSortedList = sortContacts(filteredList, state.sort)\r\n\r\n        return { ...state, filteredSortedList }\r\n    }\r\n\r\n    if (action.type === 'SORT_CONTACTS') {\r\n        const filteredList = filterContacts(state.contactsList, state.currentFilters)\r\n        const filteredSortedList = sortContacts(filteredList, action.payload)\r\n\r\n        return { ...state, sort: action.payload, filteredSortedList }\r\n    }\r\n\r\n    if (action.type === 'SET_STAR') {\r\n        let newContacts = state.contactsList\r\n\r\n        newContacts.forEach((contact) => {\r\n            if (contact.id === action.payload.id) contact.star = action.payload.setTo\r\n        })\r\n\r\n        return { ...state, contactsList: newContacts }\r\n    }\r\n\r\n    return { ...state }\r\n}\r\n\r\nexport default appReducer","import clearFilters from './clearFilters'\r\n\r\nconst defaultAppState = {\r\n    listReady: false,\r\n    formsList: [],\r\n    departmentsList: [],\r\n    workersList: [],\r\n    starsList: [],\r\n    contactsList: [],\r\n    filteredSortedList: [],\r\n    sort: { by: 'date', method: 'asc' },\r\n    currentFilters: clearFilters,\r\n    selectedContact: null,\r\n    error: { isError: false, message: '', code: '' }\r\n}\r\n\r\nexport default defaultAppState","const CheckBoxFilter = ({ checkboxes, update }) => {\r\n    return <>\r\n        <div className=\"d-block checkbox-container mt-1 mb-3 ms-1\">\r\n            <label>\r\n                <b className={checkboxes.filter(box => box.checked).length === 0 ? 'font-wrong' : ''}>\r\n                    Wszystkie\r\n                </b>\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={checkboxes.filter(box => !box.checked).length === 0}\r\n                    onChange={() => update('all')}\r\n                />\r\n\r\n                <div className=\"checkmark\"></div>\r\n            </label>\r\n        </div>\r\n\r\n        {\r\n            checkboxes.map(option => <div key={option.id} className=\"d-block checkbox-container mt-1 ms-1\">\r\n                <label>\r\n                    {option.name}\r\n\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={option.checked}\r\n                        onChange={() => update(option.id)}\r\n                    />\r\n\r\n                    <div className=\"checkmark\"></div>\r\n                </label>\r\n            </div>)\r\n        }\r\n    </>\r\n}\r\n\r\nexport default CheckBoxFilter","import { Collapse } from 'react-bootstrap'\r\n\r\nconst DateFilter = ({ currentOptions, update }) => {\r\n    return <>\r\n        <div className=\"d-block checkbox-container mt-1 ms-1\">\r\n            <label>\r\n                Od początku\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={currentOptions.fromStart}\r\n                    onChange={() => update({ ...currentOptions, fromStart: !currentOptions.fromStart })}\r\n                />\r\n\r\n                <div className=\"checkmark\"></div>\r\n            </label>\r\n        </div>\r\n\r\n        <Collapse in={!currentOptions.fromStart}>\r\n            <div className=\"px-1\">\r\n                <div className=\"mt-2 mb-4\">\r\n                    <input\r\n                        type=\"date\"\r\n                        value={currentOptions.from}\r\n                        onChange={(e) => update({ ...currentOptions, from: e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Collapse>\r\n\r\n        <div className=\"d-block checkbox-container mt-1 ms-1\">\r\n            <label>\r\n                Do końca\r\n\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={currentOptions.toEnd}\r\n                    onChange={() => update({ ...currentOptions, toEnd: !currentOptions.toEnd })}\r\n                />\r\n\r\n                <div className=\"checkmark\"></div>\r\n            </label>\r\n        </div>\r\n\r\n        <Collapse in={!currentOptions.toEnd}>\r\n            <div className=\"px-1\">\r\n                <div className=\"mt-2 mb-4\">\r\n                    <input\r\n                        type=\"date\"\r\n                        value={currentOptions.to}\r\n                        onChange={(e) => update({ ...currentOptions, to: e.target.value })}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </Collapse>\r\n    </>\r\n}\r\n\r\nexport default DateFilter","import { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport WindowContext from '../../../functions/WindowContext'\r\nimport CheckBoxFilter from '../components/CheckBoxFilter'\r\nimport DateFilter from '../components/DateFilter'\r\nimport moment from 'moment'\r\n\r\nconst WindowFilters = () => {\r\n    const { systemState, systemDispatch } = useContext(WindowContext)\r\n    const { appState, appDispatch } = systemState.window.data\r\n\r\n    const formsList = appState.formsList\r\n    const departmentsList = appState.departmentsList\r\n    const currentFilters = appState.currentFilters\r\n\r\n    const prepareCheckboxes = (all, uncheched = []) => {\r\n        return all.map(filter => {\r\n            return {\r\n                ...filter,\r\n                checked: !uncheched.filter(current => current.id === filter.id).length > 0\r\n            }\r\n        })\r\n    }\r\n\r\n    const [formFilters, setFormFilters] = useState(prepareCheckboxes(formsList, currentFilters.form))\r\n    const [departmentFilters, setDepartmentFilters]\r\n        = useState(prepareCheckboxes(departmentsList, currentFilters.department))\r\n    const [dateFilters, setDateFilters] = useState(currentFilters.date)\r\n    const [isCorrect, setIsCorrect] = useState({ ok: true, clicked: false, message: '' })\r\n\r\n    useEffect(() => {\r\n        let answer = { ok: false, clicked: false, message: '' }\r\n\r\n        if (formFilters.filter(f => f.checked).length === 0)\r\n            answer.message = 'Nie zaznaczono żadnego formularza'\r\n\r\n        else if (departmentFilters.filter(f => f.checked).length === 0)\r\n            answer.message = 'Nie zaznaczono żadnego działu'\r\n\r\n        else if (!dateFilters.fromStart && isNaN(Date.parse(dateFilters.from)))\r\n            answer.message = 'Początkowa data zakresu jest nieprawidłowa'\r\n\r\n        else if (!dateFilters.toEnd && isNaN(Date.parse(dateFilters.to)))\r\n            answer.message = 'Końcowa data zakresu jest nieprawidłowa'\r\n\r\n        else if (!dateFilters.fromStart && !dateFilters.toEnd && moment(dateFilters.from) > moment(dateFilters.to))\r\n            answer.message = 'Data początkowa musi być mniejsza, lub równa dacie końcowej'\r\n\r\n        else answer.ok = true\r\n\r\n        setIsCorrect(answer)\r\n\r\n    }, [formFilters, departmentFilters, dateFilters, systemState.window.isOpen])\r\n\r\n    const handleCheckboxClick = (filter, checkbox) => {\r\n        let current = { filter: undefined, setFilter: undefined }\r\n        if (filter === 'form') current = { filter: formFilters, setFilter: setFormFilters }\r\n        else if (filter === 'department') current = { filter: departmentFilters, setFilter: setDepartmentFilters }\r\n\r\n        if (checkbox === 'all') {\r\n            const setTo = current.filter.filter(box => !box.checked).length !== 0\r\n\r\n            current.setFilter(current.filter.map(box => { return { ...box, checked: setTo } }))\r\n            return\r\n        }\r\n\r\n        current.setFilter(current.filter.map(f => {\r\n            if (f.id === checkbox) return { ...f, checked: !f.checked }\r\n            return { ...f }\r\n        }))\r\n    }\r\n\r\n    const undoChanges = () => {\r\n        setFormFilters(prepareCheckboxes(formsList, currentFilters.form))\r\n        setDepartmentFilters(prepareCheckboxes(departmentsList, currentFilters.department))\r\n        setDateFilters(currentFilters.date)\r\n    }\r\n\r\n    useEffect(undoChanges, [systemState.window.isOpen])\r\n\r\n    const clearFilters = () => {\r\n        setFormFilters(prepareCheckboxes(formsList, []))\r\n        setDepartmentFilters(prepareCheckboxes(departmentsList, []))\r\n        setDateFilters({ ...currentFilters.date, fromStart: true, toEnd: true })\r\n    }\r\n\r\n    const handleSetFilters = () => {\r\n        if (!isCorrect.ok) {\r\n            if (!isCorrect.clicked) setIsCorrect({ ...isCorrect, clicked: true })\r\n            return\r\n        }\r\n\r\n        let formsToSet = formFilters.filter(f => !f.checked)\r\n        formsToSet = formsToSet.map(f => { return { id: f.id, name: f.name } })\r\n\r\n        let departmentsToSet = departmentFilters.filter(f => !f.checked)\r\n        departmentsToSet = departmentsToSet.map(f => { return { id: f.id, name: f.name, email: f.email } })\r\n\r\n        let filtersToSet = { ...currentFilters, form: formsToSet, department: departmentsToSet, date: dateFilters }\r\n\r\n        appDispatch({ type: 'UPDATE_FILTERS', payload: filtersToSet })\r\n        systemDispatch({ type: 'CLOSE_WINDOW' })\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return <div className='row px-2'>\r\n        <div className=\"col-12\">\r\n            <h2 className='font-subtitle fw-bold m-0 mb-2'>Filtry zgłoszeń:</h2>\r\n\r\n            <p className='m-0'>\r\n                Filtry pomagają w szybszym odnalezieniu rządanych zgłoszeń.\r\n                <br />\r\n                <b>\r\n                    Więcej informacji na temat filtrowania zgłoszeń znaleźć\r\n                    można w <button\r\n                        className='fake-link link-help fw-bold'\r\n                        onClick={() => {\r\n                            systemDispatch({ type: 'CLOSE_WINDOW' })\r\n                            systemDispatch({ type: 'SELECT_APP', payload: 'help' })\r\n                            navigate('/help/zgloszenia')\r\n                        }}\r\n                    >\r\n                        centrum pomocy.\r\n                    </button>\r\n                </b>\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"col-12 mb-2\"><hr /></div>\r\n\r\n        <div className=\"col-4\">\r\n            <h3 className='font-big fw-bold mb-3'>Formularz kontaktowy:</h3>\r\n\r\n            <CheckBoxFilter\r\n                checkboxes={formFilters}\r\n                update={(checkbox) => handleCheckboxClick('form', checkbox)}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n            <h3 className='font-big fw-bold mb-3'>Dział:</h3>\r\n\r\n            <CheckBoxFilter\r\n                checkboxes={departmentFilters}\r\n                update={(checkbox) => handleCheckboxClick('department', checkbox)}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n            <h3 className='font-big fw-bold mb-3'>Data zgłoszenia:</h3>\r\n\r\n            <DateFilter\r\n                currentOptions={dateFilters}\r\n                update={(data) => setDateFilters(data)}\r\n            />\r\n        </div>\r\n\r\n        {\r\n            (!isCorrect.ok && isCorrect.clicked) && <div className=\"col-12 mt-5 warning-box\">\r\n                <h3 className=\"fw-bold font-big mb-0\">{isCorrect.message || 'Wystąpił błąd'}.</h3>\r\n\r\n                <p className='mb-0'>\r\n                    Aby zastosować filtry należy rozwiązać ten problem, lub {` `}\r\n                    <button className=\"fake-link fw-bold\" onClick={clearFilters}>wyczyścić filtry</button>.\r\n\r\n                    Więcej informacji na temat filtrowania zgłoszeń znaleźć można\r\n                    w <button\r\n                        className='fake-link link-help fw-bold'\r\n                        onClick={() => {\r\n                            systemDispatch({ type: 'CLOSE_WINDOW' })\r\n                            systemDispatch({ type: 'SELECT_APP', payload: 'help' })\r\n                            navigate('/help/zgloszenia')\r\n                        }}\r\n                    >\r\n                        centrum pomocy.\r\n                    </button>\r\n                </p>\r\n            </div>\r\n        }\r\n\r\n        <div className=\"col-12 mt-4\"><hr /></div>\r\n\r\n        <div className=\"col-12 mt-2 d-flex justify-content-between\">\r\n            <div>\r\n                <button\r\n                    className=\"btn btn-x me-2 mb-1\"\r\n                    onClick={clearFilters}\r\n                >\r\n                    <span>Wyczyść filtry</span>\r\n                </button>\r\n\r\n                <button\r\n                    className=\"btn btn-sec me-2 mb-1\"\r\n                    onClick={undoChanges}\r\n                >\r\n                    <span>Cofnij zmiany</span>\r\n                </button>\r\n            </div>\r\n\r\n            <div>\r\n                <button\r\n                    className='btn btn-sec ms-2 mb-1'\r\n                    onClick={() => {\r\n                        undoChanges()\r\n                        systemDispatch({ type: 'CLOSE_WINDOW' })\r\n                    }}\r\n                >\r\n                    Anuluj\r\n                </button>\r\n\r\n                <button\r\n                    className={`btn ${isCorrect.ok ? 'btn-prim' : 'btn-dis'} ms-2 mb-1`}\r\n                    onClick={() => {\r\n                        handleSetFilters()\r\n                    }}\r\n                >\r\n                    Zastosuj\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default WindowFilters","import { useState, useEffect, useContext } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport WindowContext from '../../../functions/WindowContext'\r\n\r\nimport iconX from '../../../img/icon-close.png'\r\n\r\nconst WindowMail = () => {\r\n    const { systemState, systemDispatch } = useContext(WindowContext)\r\n    const { contact, sendMail } = systemState.window.data\r\n\r\n    const [warning, setWarning] = useState({ show: false, message: '' })\r\n\r\n    useEffect(() => setWarning({ show: false, message: '' }), [systemState.window])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return <div className='row px-2'>\r\n        <div className=\"col-12\">\r\n            <h2 className='font-subtitle fw-bold m-0 mb-2'>Wyślij wiadomość e-mail:</h2>\r\n\r\n            <p className='m-0'>\r\n                Więcej informacji na temat wysyłania kontaktów mailowo znaleźć\r\n                można w <button\r\n                    className='fake-link link-help fw-bold'\r\n                    onClick={() => {\r\n                        systemDispatch({ type: 'CLOSE_WINDOW' })\r\n                        systemDispatch({ type: 'SELECT_APP', payload: 'help' })\r\n                        navigate('/help/zgloszenia')\r\n                    }}\r\n                >\r\n                    centrum pomocy.\r\n                </button>\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"col-12 mb-2\"><hr /></div>\r\n\r\n        <div className=\"col-12\">\r\n            <button className='btn btn-prim mb-3' onClick={() => sendMail(contact)}>\r\n                Wyślij e-mail z danymi\r\n            </button>\r\n\r\n            <br />\r\n\r\n            <button\r\n                className='btn btn-prim mb-1 me-2'\r\n                onClick={() => sendMail(contact, systemState.user.email)}\r\n            >\r\n                Wyślij do siebie\r\n            </button>\r\n\r\n            <button\r\n                className={`btn ${contact.email ? 'btn-prim' : 'btn-dis'} mb-1 me-2`}\r\n                onClick={\r\n                    () => contact.email ?\r\n                        sendMail(contact, contact.email)\r\n                        :\r\n                        setWarning({ show: true, message: 'Nie można wykonać tej operacji, ponieważ klient nie podał adresu e-mail.' })\r\n                }\r\n            >\r\n                Wyślij do klienta\r\n            </button>\r\n\r\n            <button\r\n                className={`btn ${contact.worker !== null ? 'btn-prim' : 'btn-dis'} mb-1 me-2`}\r\n                onClick={\r\n                    () => contact.worker !== null ?\r\n                        sendMail(contact, contact.worker.email)\r\n                        :\r\n                        setWarning({ show: true, message: 'Nie można wykonać tej operacji, ponieważ kontakt nie został przekazany żadnemu pracownikowi.' })\r\n                }\r\n            >\r\n                Wyślij do pracownika\r\n            </button>\r\n\r\n            {\r\n                warning.show && <div className=\"warning-box my-4 d-flex align-items-center justify-content-between\">\r\n                    <h2 className='font-big fw-bold font-wrong m-0 me-4'>{warning.message}</h2>\r\n\r\n                    <button className='btn btn-x btn-icon-small' onClick={() => setWarning({ show: false, message: '' })}>\r\n                        <img src={iconX} alt=\"Zamknij powiadomienie\" />\r\n                    </button>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"col-12 mb-2\"><hr /></div>\r\n\r\n            <div className=\"col-12 mt-2 d-flex justify-content-end\">\r\n                <button className=\"btn btn-sec\" onClick={() => systemDispatch({ type: 'CLOSE_WINDOW' })}>\r\n                    Anuluj\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default WindowMail","import { useEffect } from 'react'\r\n\r\nconst useClickOutside = (ref, callMe) => {\r\n    useEffect(() => {\r\n        const handleClickOutside = (event) => {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                callMe()\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside)\r\n\r\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside)\r\n\r\n    }, [ref])\r\n}\r\n\r\nexport default useClickOutside","import { useState, useRef } from 'react'\r\nimport useClickOutside from '../functions/useClickOutside'\r\n\r\nconst SelectInput = ({ state, setState, options }) => {\r\n    const [isDropdownShown, setIsDropdownShown] = useState(false)\r\n\r\n    const containerRef = useRef(null)\r\n    useClickOutside(containerRef, () => setIsDropdownShown(false))\r\n\r\n    return <div className=\"csi-container\" ref={containerRef}>\r\n        <div className=\"csi-selected\" onClick={() => setIsDropdownShown(!isDropdownShown)}>\r\n            <b>{state.name || <span className=\"font-gray\">Wybierz opcję</span>}</b>\r\n        </div>\r\n\r\n        <div className={`csi-options-dropdown ${isDropdownShown ? '' : 'd-none'}`}>\r\n            {\r\n                options.map(opt => <div\r\n                    key={opt.id}\r\n                    className=\"csi-option\"\r\n                    onClick={() => { setState(opt); setIsDropdownShown(false) }}\r\n                >\r\n                    {opt.name}\r\n                </div>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default SelectInput","import { useContext, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport WindowContext from '../../../functions/WindowContext'\r\nimport SelectInput from '../../../components/SelectInput'\r\nimport { APIpost } from '../../../functions/api'\r\n\r\nconst WindowDelegate = () => {\r\n    const { systemState, systemDispatch } = useContext(WindowContext)\r\n    const { contact, workers } = systemState.window.data\r\n\r\n    const [worker, setWorker] = useState(0)\r\n\r\n    const postContactWorder = async (contactID, workerID) => {\r\n        const answer = APIpost()\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    return <div className='row px-2'>\r\n        <div className=\"col-12\">\r\n            <h2 className='font-subtitle fw-bold m-0 mb-2'>\r\n                Przekaż zgłoszenie\r\n\r\n                {\r\n                    (contact.company || contact.name) && <>\r\n                        {` od `}\r\n\r\n                        {contact.company}\r\n                        {contact.company && contact.name ? ', ' : ''}\r\n                        {contact.name}\r\n                    </>\r\n                }\r\n\r\n                :\r\n            </h2>\r\n\r\n            <p className='m-0'>\r\n                Więcej informacji na temat przekazywania kontaktów znaleźć\r\n                można w <button\r\n                    className='fake-link link-help fw-bold'\r\n                    onClick={() => {\r\n                        systemDispatch({ type: 'CLOSE_WINDOW' })\r\n                        systemDispatch({ type: 'SELECT_APP', payload: 'help' })\r\n                        navigate('/help/zgloszenia')\r\n                    }}\r\n                >\r\n                    centrum pomocy.\r\n                </button>\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"col-12 mb-2\"><hr /></div>\r\n\r\n        <div className=\"col-6 mb-2\">\r\n            <h3 className=\"font-big fw-bold\">Przekaż:</h3>\r\n\r\n            <SelectInput options={workers} state={worker} setState={setWorker} />\r\n        </div>\r\n\r\n        <div className=\"col-6 mb-3 ps-4\">\r\n            <h3 className=\"font-big fw-bold\">Aktualnie przekazano:</h3>\r\n            {\r\n                contact.worker !== null ?\r\n                    <>\r\n                        {contact.worker.name}\r\n                        <br />\r\n                        <a href={`mailto:${contact.worker.email}`}>({contact.worker.email})</a>\r\n                    </>\r\n                    :\r\n                    <span className=\"font-gray fw-bold\">Nie przekazano</span>\r\n            }\r\n\r\n            <div style={{ height: '100px' }}></div>\r\n        </div>\r\n\r\n        <div className=\"col-12 mb-2\"><hr /></div>\r\n\r\n        <div className=\"col-12 d-flex d-flex justify-content-end\">\r\n            <button\r\n                className=\"btn btn-sec mb-1 ms-1\"\r\n                onClick={() => systemDispatch({ type: 'CLOSE_WINDOW' })}\r\n            >\r\n                Anuluj\r\n            </button>\r\n\r\n            <button className=\"btn btn-prim mb-1 ms-1\">\r\n                Przekaż kontakt\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default WindowDelegate","import { useContext } from 'react'\r\nimport WindowContext from '../../../functions/WindowContext'\r\n\r\nimport picError from '../../../img/pic-error.png'\r\n\r\nconst NoWindow = () => {\r\n    const { systemDispatch } = useContext(WindowContext)\r\n\r\n    return <div className=\"row d-flex align-items-center text-center text-md-start\">\r\n        <div className=\"col-md-4 text-center\">\r\n            <img src={picError} alt=\"Wystąpił błąd!\" className='img-fluid' />\r\n        </div>\r\n\r\n        <div className=\"col-md-8\">\r\n            <h2 className=\"font-wrong fw-bold mb-3\">Wystąpił błąd!</h2>\r\n\r\n            <p>\r\n                Wystapił błąd i nie udało się otworzyć okna.\r\n                Proszę spróbować ponownie, a jeżeli błąd się\r\n                powtórzy - skontaktuj się z administratorem!\r\n            </p>\r\n        </div>\r\n\r\n        <div className=\"col-12 text-md-end mt-3 mt-md-0\">\r\n            <button className=\"btn btn-sec\" onClick={() => systemDispatch({ type: 'CLOSE_WINDOW' })}>\r\n                Anuluj\r\n            </button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default NoWindow","import WindowFilters from '../windows/WindowFilters'\r\nimport WindowMail from '../windows/WindowMail'\r\nimport WindowDelegate from '../windows/WindowDelegate'\r\n\r\nimport NoWindow from '../windows/NoWindow'\r\n\r\nconst slugs = {\r\n    filters: { title: 'Zastosuj filtry', content: <WindowFilters /> },\r\n    email: { title: 'Wyślij kontakt w wiadomości e-mail', content: <WindowMail /> },\r\n    delegate: { title: 'Przekaż pracownikowi', content: <WindowDelegate /> }\r\n}\r\n\r\nconst find = (slug) => {\r\n    return slugs[slug] || { title: 'Wystąpił błąd!', content: <NoWindow /> }\r\n}\r\n\r\nexport default { slugs, find }","import { useEffect, useContext, useReducer } from 'react'\r\nimport SystemContext from '../../functions/SystemContext'\r\nimport AppContext from './functions/AppContext'\r\n\r\nimport { LoadingBig } from '../../components/Loading'\r\nimport TopBar from './components/TopBar'\r\nimport ListHeader from './components/ListHeader'\r\nimport TheList from './components/TheList'\r\nimport ListError from './components/ListError'\r\nimport PreviewWrong from './components/PreviewWrong'\r\nimport ThePreview from './components/ThePreview'\r\n\r\nimport appReducer from './functions/appReducer'\r\nimport defaultAppState from './functions/defaultAppState'\r\nimport windowsSlugs from './functions/windowsSlugs'\r\n\r\nimport { APIget, APIpost } from '../../functions/api'\r\n\r\nlet starsToSet = {}, setStarsTimeout = setTimeout(null, 0)\r\n\r\nconst App = () => {\r\n    const { systemState, systemDispatch } = useContext(SystemContext)\r\n    const [appState, appDispatch] = useReducer(appReducer, defaultAppState)\r\n\r\n    const fetchList = async () => {\r\n        // Get forms list:\r\n        const forms = await APIget(\r\n            systemState.apiLink,\r\n            '/zgloszenia/get-forms',\r\n            { 'auth-token': systemState.user.authToken }\r\n        )\r\n        if (!forms.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się pobrać listy formularzy!',\r\n                error: '@ZGLOSZENIA/get-departments#00'\r\n            }\r\n        })\r\n        if (!forms.data.success) return appDispatch({ type: 'LIST_ERROR', payload: forms.data })\r\n        appDispatch({ type: 'LOAD_FORMS', payload: forms.data.data })\r\n\r\n        // Get departments list:\r\n        const departments = await APIget(\r\n            systemState.apiLink,\r\n            '/zgloszenia/get-departments',\r\n            { 'auth-token': systemState.user.authToken }\r\n        )\r\n        if (!departments.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się pobrać listy działów!',\r\n                error: '@ZGLOSZENIA/get-departments#00'\r\n            }\r\n        })\r\n        if (!departments.data.success) return appDispatch({ type: 'LIST_ERROR', payload: departments.data })\r\n        appDispatch({ type: 'LOAD_DEPARTMENTS', payload: departments.data.data })\r\n\r\n        // Get workers list:\r\n        const workers = await APIget(\r\n            systemState.apiLink,\r\n            '/zgloszenia/get-workers',\r\n            { 'auth-token': systemState.user.authToken }\r\n        )\r\n        if (!workers.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się pobrać listy pracowników!',\r\n                error: '@ZGLOSZENIA/get-workers#00'\r\n            }\r\n        })\r\n        if (!workers.data.success) return appDispatch({ type: 'LIST_ERROR', payload: workers.data })\r\n        appDispatch({ type: 'LOAD_WORKERS', payload: workers.data.data })\r\n\r\n        // Get stars:\r\n        const stars = await APIget(\r\n            systemState.apiLink,\r\n            '/zgloszenia/get-stars',\r\n            { 'auth-token': systemState.user.authToken }\r\n        )\r\n        if (!stars.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się pobrać listy gwiazdek!',\r\n                error: '@ZGLOSZENIA/get-stars#00'\r\n            }\r\n        })\r\n        if (!stars.data.success) return appDispatch({ type: 'LIST_ERROR', payload: stars.data })\r\n        appDispatch({ type: 'LOAD_STARS', payload: stars.data.data })\r\n\r\n        // Get contacts list:\r\n        const contacts = await APIget(\r\n            systemState.apiLink,\r\n            '/zgloszenia/get-list',\r\n            { 'auth-token': systemState.user.authToken }\r\n        )\r\n        if (!contacts.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się pobrać listy zgłoszeń!',\r\n                error: '@ZGLOSZENIA/get-contacts#00'\r\n            }\r\n        })\r\n        if (!contacts.data.success) return appDispatch({ type: 'LIST_ERROR', payload: contacts.data })\r\n        appDispatch({ type: 'LOAD_CONTACTS', payload: contacts.data.data })\r\n        appDispatch({ type: 'FILTER_SORT_CONTACTS' })\r\n    }\r\n    useEffect(() => { fetchList() }, [])\r\n\r\n    useEffect(() => appDispatch({ type: 'FILTER_SORT_CONTACTS' }), [appState.currentFilters])\r\n\r\n    const openWindow = (slug, data = {}) => {\r\n        const { title, content } = windowsSlugs.find(slug)\r\n\r\n        systemDispatch({\r\n            type: 'OPEN_WINDOW',\r\n            payload: { title, content, data }\r\n        })\r\n    }\r\n\r\n    const setStars = async () => {\r\n        const answer = await APIpost(\r\n            systemState.apiLink,\r\n            '/zgloszenia/post-stars',\r\n            { 'auth-token': systemState.user.authToken },\r\n            starsToSet,\r\n        )\r\n\r\n        if (!answer.success) return appDispatch({\r\n            type: 'LIST_ERROR', payload: {\r\n                success: false,\r\n                message: 'Nie udało się zaktualizować danych dotyczących oznaczeń kontaktów gwiazdkami!',\r\n                error: '@ZGLOSZENIA/set-stars#00'\r\n            }\r\n        })\r\n\r\n        if (!answer.data.success) appDispatch({ type: 'LIST_ERROR', payload: answer.data })\r\n    }\r\n\r\n    const waitSetStars = (id, setTo) => {\r\n        clearTimeout(setStarsTimeout)\r\n        starsToSet[id] = setTo\r\n\r\n        appDispatch({ type: 'SET_STAR', payload: { id, setTo } })\r\n\r\n        setStarsTimeout = setTimeout(() => {\r\n            setStars()\r\n            starsToSet = {}\r\n\r\n        }, 1000)\r\n    }\r\n\r\n    return <AppContext.Provider value={{ appState, appDispatch, openWindow, fetchList, waitSetStars }}>\r\n        <TopBar />\r\n\r\n        <div className=\"scroll-columns\">\r\n            <div className=\"scroll-column px-3\" style={{ width: '60vw' }}>\r\n                <ListHeader\r\n                    shownCnt={appState.filteredSortedList.length}\r\n                    allCnt={appState.contactsList.length}\r\n                />\r\n\r\n                {\r\n                    !appState.listReady ?\r\n                        <div className=\"mt-5 pt-5\">\r\n                            <LoadingBig />\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        appState.error.isError ?\r\n                            <ListError\r\n                                message={appState.error.message}\r\n                                code={appState.error.code}\r\n                                reload={fetchList}\r\n                            />\r\n\r\n                            :\r\n\r\n                            <TheList />\r\n                }\r\n            </div>\r\n\r\n            <div className=\"scroll-column section-gray-l\" style={{ width: '40vw' }}>\r\n                {\r\n                    !appState.listReady ?\r\n                        <div className=\"mt-5 pt-5\">\r\n                            <LoadingBig />\r\n                        </div>\r\n\r\n                        :\r\n\r\n                        appState.error.isError ?\r\n                            <PreviewWrong />\r\n\r\n                            :\r\n\r\n                            appState.contactsList.length === 0 ?\r\n                                <PreviewWrong />\r\n\r\n                                :\r\n\r\n                                <ThePreview />\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    </AppContext.Provider>\r\n}\r\n\r\nexport default App","import { Routes, Route, Navigate } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nconst Index = () => {\r\n    return <Routes>\r\n        <Route index element={<App />} />\r\n        <Route path='*' element={<Navigate to={'/'} />} />\r\n    </Routes>\r\n}\r\n\r\nexport default Index"],"names":["React","useContext","AppContext","appDispatch","appState","useState","search","setSearch","className","onSubmit","event","preventDefault","type","payload","value","onChange","e","target","placeholder","src","alt","form","department","date","fromStart","toEnd","from","to","emptyPills","openWindow","filterPills","setFilterPills","useEffect","newPills","currentFilters","length","substring","style","width","onClick","clearFilters","iconDelete","iconX","shownCnt","allCnt","iconReload","cols","text","isActive","isDesc","isEven","action","sort","currentSort","setCurrentSort","handleSortClick","newSort","by","method","phrase","contact","select","setStar","starRef","useRef","id","current","children","handleItemClick","moment","isValid","format","company","name","email","tel","worker","star","ref","fetchList","picEmpty","waitSetStars","filteredSortedList","map","selectedContact","message","code","reload","picError","translateKey","key","nip","topic","country","address","brand","si","cycles","title","filledData","notFilledData","Object","entries","push","body","valueToShow","slice","field","document","location","encodeURIComponent","content","newWindow","window","open","write","outerHTML","close","setTimeout","empty","contentToPrint","workers","workersList","sendMail","printContact","checked","hideEmptyFields","setHideEmptyFields","fields","anyField","setAnyField","any","filter","n","fullWidth","label","shownContact","setShownContact","contentRef","found","contactsList","selected","href","author","filterByArray","list","filters","newArray","forEach","currentList","toLowerCase","indexOf","doSearch","filtered","fromDate","isSameOrAfter","toDate","isSameOrBefore","filterByDate","sortByDate","a","b","Date","getTime","sortByClient","aName","bName","localeCompare","sortByDepartment","aDepartment","bDepartment","sortByWorker","aWorker","bWorker","array","sortByStar","reverse","state","formsList","departmentsList","starsList","foundForm","foundDepartment","dep","foundWorker","contact_id","listReady","error","isError","filteredList","filterContacts","sortContacts","newContacts","setTo","checkboxes","update","box","option","currentOptions","Collapse","in","WindowContext","systemState","systemDispatch","data","prepareCheckboxes","all","uncheched","formFilters","setFormFilters","departmentFilters","setDepartmentFilters","dateFilters","setDateFilters","ok","clicked","isCorrect","setIsCorrect","answer","f","isNaN","parse","isOpen","handleCheckboxClick","checkbox","undefined","setFilter","undoChanges","navigate","useNavigate","formsToSet","departmentsToSet","filtersToSet","handleSetFilters","show","warning","setWarning","user","callMe","handleClickOutside","contains","addEventListener","removeEventListener","setState","options","isDropdownShown","setIsDropdownShown","containerRef","useClickOutside","opt","setWorker","height","slugs","delegate","slug","starsToSet","setStarsTimeout","SystemContext","useReducer","appReducer","defaultAppState","APIget","apiLink","authToken","forms","success","departments","stars","contacts","setStars","APIpost","Provider","windowsSlugs","clearTimeout","Loading","index","element","path"],"sourceRoot":""}